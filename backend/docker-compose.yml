version: '3.8'

services:
  #Si tu veux utiliser le serveur web dans Docker, décommenter les lignes suivantes
  web:
    build: .
    command: sh -c "alembic upgrade head && uvicorn core.main:app --host 0.0.0.0 --port 8085"
    volumes:
      - .:/app
    ports:
      - "8085:8085"
    env_file:
      - .env
    depends_on:
      elecdis-db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Ajouté pour la résolution du nom d'hôte

  elecdis-db:
    image: postgres:13-alpine
    restart: always
    container_name: elecdis-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_SERVER: "elecdis-db"
      PGDATA: "/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  adminer:
    image: adminer
    ports:
      - "8081:8080"
    environment:
      ADMINER_DESIGN: pepa-linha-dark
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_EMAIL}"  # Email de connexion pour pgAdmin
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_PASSWORD}"  # Mot de passe pour pgAdmin
    ports:
      - "5050:80"  # Accès à pgAdmin via http://localhost:5050
    depends_on:
      elecdis-db:
        condition: service_healthy
    networks:
      - app-network

  websocket:
    build: .
    volumes:
      - ./ocpp_scenario:/app/ocpp_scenario
    command: sh -c "PYTHONPATH=/app python /app/ocpp_scenario/main.py"
    ports:
      - "9001:9001"
    env_file:
      - .env
    depends_on:
      elecdis-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
